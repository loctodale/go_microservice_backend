// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v3.21.12
// source: internal/proto/product/product_service.proto

package grpc_gen

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateProductInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CategoryID    int32                  `protobuf:"varint,1,opt,name=CategoryID,proto3" json:"CategoryID,omitempty"`
	BrandID       int32                  `protobuf:"varint,2,opt,name=BrandID,proto3" json:"BrandID,omitempty"`
	SPUName       string                 `protobuf:"bytes,3,opt,name=SPUName,proto3" json:"SPUName,omitempty"`
	SPUDesc       string                 `protobuf:"bytes,4,opt,name=SPUDesc,proto3" json:"SPUDesc,omitempty"`
	SPUImg        string                 `protobuf:"bytes,5,opt,name=SPUImg,proto3" json:"SPUImg,omitempty"`
	SPUVideo      string                 `protobuf:"bytes,6,opt,name=SPUVideo,proto3" json:"SPUVideo,omitempty"`
	SPUSort       int32                  `protobuf:"varint,7,opt,name=SPUSort,proto3" json:"SPUSort,omitempty"`
	SPUPrice      int32                  `protobuf:"varint,8,opt,name=SPUPrice,proto3" json:"SPUPrice,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProductInput) Reset() {
	*x = CreateProductInput{}
	mi := &file_internal_proto_product_product_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProductInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductInput) ProtoMessage() {}

func (x *CreateProductInput) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_product_product_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductInput.ProtoReflect.Descriptor instead.
func (*CreateProductInput) Descriptor() ([]byte, []int) {
	return file_internal_proto_product_product_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateProductInput) GetCategoryID() int32 {
	if x != nil {
		return x.CategoryID
	}
	return 0
}

func (x *CreateProductInput) GetBrandID() int32 {
	if x != nil {
		return x.BrandID
	}
	return 0
}

func (x *CreateProductInput) GetSPUName() string {
	if x != nil {
		return x.SPUName
	}
	return ""
}

func (x *CreateProductInput) GetSPUDesc() string {
	if x != nil {
		return x.SPUDesc
	}
	return ""
}

func (x *CreateProductInput) GetSPUImg() string {
	if x != nil {
		return x.SPUImg
	}
	return ""
}

func (x *CreateProductInput) GetSPUVideo() string {
	if x != nil {
		return x.SPUVideo
	}
	return ""
}

func (x *CreateProductInput) GetSPUSort() int32 {
	if x != nil {
		return x.SPUSort
	}
	return 0
}

func (x *CreateProductInput) GetSPUPrice() int32 {
	if x != nil {
		return x.SPUPrice
	}
	return 0
}

type CreateCategoryInput struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ParentID            int32                  `protobuf:"varint,1,opt,name=ParentID,proto3" json:"ParentID,omitempty"`
	CategoryName        string                 `protobuf:"bytes,2,opt,name=CategoryName,proto3" json:"CategoryName,omitempty"`
	HasActiveChildren   bool                   `protobuf:"varint,3,opt,name=HasActiveChildren,proto3" json:"HasActiveChildren,omitempty"`
	CategorySPUCount    int32                  `protobuf:"varint,4,opt,name=CategorySPUCount,proto3" json:"CategorySPUCount,omitempty"`
	CategoryStatus      int32                  `protobuf:"varint,5,opt,name=CategoryStatus,proto3" json:"CategoryStatus,omitempty"`
	CategoryDescription string                 `protobuf:"bytes,6,opt,name=CategoryDescription,proto3" json:"CategoryDescription,omitempty"`
	CategoryIcon        string                 `protobuf:"bytes,7,opt,name=CategoryIcon,proto3" json:"CategoryIcon,omitempty"`
	CategorySort        int32                  `protobuf:"varint,8,opt,name=CategorySort,proto3" json:"CategorySort,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CreateCategoryInput) Reset() {
	*x = CreateCategoryInput{}
	mi := &file_internal_proto_product_product_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCategoryInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCategoryInput) ProtoMessage() {}

func (x *CreateCategoryInput) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_product_product_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCategoryInput.ProtoReflect.Descriptor instead.
func (*CreateCategoryInput) Descriptor() ([]byte, []int) {
	return file_internal_proto_product_product_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCategoryInput) GetParentID() int32 {
	if x != nil {
		return x.ParentID
	}
	return 0
}

func (x *CreateCategoryInput) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *CreateCategoryInput) GetHasActiveChildren() bool {
	if x != nil {
		return x.HasActiveChildren
	}
	return false
}

func (x *CreateCategoryInput) GetCategorySPUCount() int32 {
	if x != nil {
		return x.CategorySPUCount
	}
	return 0
}

func (x *CreateCategoryInput) GetCategoryStatus() int32 {
	if x != nil {
		return x.CategoryStatus
	}
	return 0
}

func (x *CreateCategoryInput) GetCategoryDescription() string {
	if x != nil {
		return x.CategoryDescription
	}
	return ""
}

func (x *CreateCategoryInput) GetCategoryIcon() string {
	if x != nil {
		return x.CategoryIcon
	}
	return ""
}

func (x *CreateCategoryInput) GetCategorySort() int32 {
	if x != nil {
		return x.CategorySort
	}
	return 0
}

type CreateSKUInput struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	SpuID             int32                  `protobuf:"varint,1,opt,name=SpuID,proto3" json:"SpuID,omitempty"`
	SPUPrice          int32                  `protobuf:"varint,2,opt,name=SPUPrice,proto3" json:"SPUPrice,omitempty"`
	SKUAttributeValue string                 `protobuf:"bytes,3,opt,name=SKUAttributeValue,proto3" json:"SKUAttributeValue,omitempty"`
	SKUStock          int32                  `protobuf:"varint,4,opt,name=SKUStock,proto3" json:"SKUStock,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CreateSKUInput) Reset() {
	*x = CreateSKUInput{}
	mi := &file_internal_proto_product_product_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSKUInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSKUInput) ProtoMessage() {}

func (x *CreateSKUInput) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_product_product_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSKUInput.ProtoReflect.Descriptor instead.
func (*CreateSKUInput) Descriptor() ([]byte, []int) {
	return file_internal_proto_product_product_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateSKUInput) GetSpuID() int32 {
	if x != nil {
		return x.SpuID
	}
	return 0
}

func (x *CreateSKUInput) GetSPUPrice() int32 {
	if x != nil {
		return x.SPUPrice
	}
	return 0
}

func (x *CreateSKUInput) GetSKUAttributeValue() string {
	if x != nil {
		return x.SKUAttributeValue
	}
	return ""
}

func (x *CreateSKUInput) GetSKUStock() int32 {
	if x != nil {
		return x.SKUStock
	}
	return 0
}

type SampleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatusCode    int32                  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SampleResponse) Reset() {
	*x = SampleResponse{}
	mi := &file_internal_proto_product_product_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SampleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleResponse) ProtoMessage() {}

func (x *SampleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_product_product_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleResponse.ProtoReflect.Descriptor instead.
func (*SampleResponse) Descriptor() ([]byte, []int) {
	return file_internal_proto_product_product_service_proto_rawDescGZIP(), []int{3}
}

func (x *SampleResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *SampleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_internal_proto_product_product_service_proto protoreflect.FileDescriptor

var file_internal_proto_product_product_service_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xec, 0x01, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x53, 0x50, 0x55, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x53, 0x50, 0x55, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x50, 0x55, 0x44, 0x65,
	0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x50, 0x55, 0x44, 0x65, 0x73,
	0x63, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x50, 0x55, 0x49, 0x6d, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x53, 0x50, 0x55, 0x49, 0x6d, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x50, 0x55,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x50, 0x55,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x50, 0x55, 0x53, 0x6f, 0x72, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x53, 0x50, 0x55, 0x53, 0x6f, 0x72, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x53, 0x50, 0x55, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x53, 0x50, 0x55, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xd1, 0x02, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x22, 0x0a, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x48, 0x61, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x48, 0x61, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x50, 0x55,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x50, 0x55, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a,
	0x0e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x6f, 0x72, 0x74, 0x22,
	0x8c, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x4b, 0x55, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x70, 0x75, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x53, 0x70, 0x75, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x50, 0x55, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x53, 0x50, 0x55, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x53, 0x4b, 0x55, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x53, 0x4b, 0x55, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x4b, 0x55, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x53, 0x4b, 0x55, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x22, 0x4a,
	0x0a, 0x0e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xe8, 0x02, 0x0a, 0x0e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x73, 0x0a,
	0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a,
	0x22, 0x10, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x12, 0x73, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1e, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x13, 0x22, 0x11, 0x2f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2f,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x6c, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4e, 0x65, 0x77, 0x53, 0x4b, 0x55, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x4b, 0x55, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22,
	0x14, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x2f, 0x73, 0x6b, 0x75, 0x42, 0x0b, 0x5a, 0x09, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x67,
	0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_internal_proto_product_product_service_proto_rawDescOnce sync.Once
	file_internal_proto_product_product_service_proto_rawDescData = file_internal_proto_product_product_service_proto_rawDesc
)

func file_internal_proto_product_product_service_proto_rawDescGZIP() []byte {
	file_internal_proto_product_product_service_proto_rawDescOnce.Do(func() {
		file_internal_proto_product_product_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_proto_product_product_service_proto_rawDescData)
	})
	return file_internal_proto_product_product_service_proto_rawDescData
}

var file_internal_proto_product_product_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_internal_proto_product_product_service_proto_goTypes = []any{
	(*CreateProductInput)(nil),  // 0: productservice.CreateProductInput
	(*CreateCategoryInput)(nil), // 1: productservice.CreateCategoryInput
	(*CreateSKUInput)(nil),      // 2: productservice.CreateSKUInput
	(*SampleResponse)(nil),      // 3: productservice.SampleResponse
}
var file_internal_proto_product_product_service_proto_depIdxs = []int32{
	0, // 0: productservice.ProductService.CreateNewProduct:input_type -> productservice.CreateProductInput
	1, // 1: productservice.ProductService.CreateNewCategory:input_type -> productservice.CreateCategoryInput
	2, // 2: productservice.ProductService.CreateNewSKU:input_type -> productservice.CreateSKUInput
	3, // 3: productservice.ProductService.CreateNewProduct:output_type -> productservice.SampleResponse
	3, // 4: productservice.ProductService.CreateNewCategory:output_type -> productservice.SampleResponse
	3, // 5: productservice.ProductService.CreateNewSKU:output_type -> productservice.SampleResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_internal_proto_product_product_service_proto_init() }
func file_internal_proto_product_product_service_proto_init() {
	if File_internal_proto_product_product_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_proto_product_product_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_proto_product_product_service_proto_goTypes,
		DependencyIndexes: file_internal_proto_product_product_service_proto_depIdxs,
		MessageInfos:      file_internal_proto_product_product_service_proto_msgTypes,
	}.Build()
	File_internal_proto_product_product_service_proto = out.File
	file_internal_proto_product_product_service_proto_rawDesc = nil
	file_internal_proto_product_product_service_proto_goTypes = nil
	file_internal_proto_product_product_service_proto_depIdxs = nil
}
